name: 'Configure AWS Credentials'
description: 'It allows to configure AWS credentials using a role or manually providing access key and secret key'

inputs:
  awsAccessKeyId:
    description: "AWS Access Key ID"
    type: string
    required: false

  awsSecretAccessKey:
    description: "AWS Secret Access Key"
    type: string
    required: false

  awsSessionToken:
    description: "AWS Session Token"
    type: string
    required: false

  awsRegion:
    description: "AWS Region"
    type: string
    required: false

  environment:
    description: "Environment name (master, prod, dev, security, etc...)"
    type: string
    required: true

  roleName:
    description: "AWS role name to assume for the terraform state initialization"
    type: string
    required: false
    default: "github"

runs:
  using: "composite"
  steps:
    - name: Set environment variables
      shell: bash
      run: |
        echo "USE_OIDC=${{ inputs.awsAccessKeyId == '' && inputs.roleName != '' }}" >> $GITHUB_ENV
        echo "USE_PROVIDED_CREDENTIALS=${{ inputs.awsRegion != '' && inputs.awsAccessKeyId != '' && inputs.awsSecretAccessKey != '' && inputs.awsSessionToken != '' }}" >> $GITHUB_ENV

    - name: Uppercase environment name
      if: ${{ env.USE_OIDC }}
      shell: bash
      run: | 
        echo "ENVIRONMENT_UPPERCASE=$(echo ${{ env.ENVIRONMENT }} | tr '[:lower:]' '[:upper:]')" >> $GITHUB_ENV

    - name: Retrieve AWS account ID and region from vars
      if: ${{ env.USE_OIDC }}
      shell: bash
      run: |
        echo "AWS_ACCOUNT_ID=${{ vars[format('{0}_AWS_ACCOUNT_ID', env.ENVIRONMENT_UPPERCASE )] }}" >> $GITHUB_ENV
        echo "AWS_ACCOUNT_REGION=${{ vars[format('{0}_AWS_ACCOUNT_REGION', env.ENVIRONMENT_UPPERCASE )] }}" >> $GITHUB_ENV

    - name: Configure AWS credentials
      if: ${{ env.USE_OIDC }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_ACCOUNT_REGION }}
        role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ inputs.roleName }}

    - name: Configure AWS Credentials using provided
      if: ${{ env.USE_PROVIDED_CREDENTIALS }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ inputs.awsRegion }}
        aws-access-key-id: ${{ inputs.awsAccessKeyId }}
        aws-secret-access-key: ${{ inputs.awsSecretAccessKey }}
        aws-session-token: ${{ inputs.awsSessionToken }}

