name: |-
  CI - Terraform Plan, Validate and Format
  
  It runs terraform plan, validate and format and updating a pull request with the changes
  
  ### Usage 
  
  ```yaml
    name: Terraform plan and format
  
    permissions:
      contents: read
      pull-requests: write
      id-token: write
  
    on:
      pull_request:
        branches:
          - main
        types: [ opened, reopened, synchronize, labeled ]
  
      workflow_dispatch:
        inputs:
          environment:
            description: "Environment to apply changes to"
            required: true
            type: choice
            options:
              - dev
              - prod

    jobs:
      apply_changes:
        uses: softkitit/github-actions-terraform/.github/workflows/ci-terraform-plan-and-format.yaml@main
        with:
          environment: ${{ inputs.environment || 'dev' }}
        secrets: inherit
  ```

permissions:
  contents: read
  pull-requests: write
  id-token: write

env:
  ENVIRONMENT: ${{ inputs.environment }}
  VARS_FOLDER_PATH: ${{ inputs.varsFolderPath || 'vars' }}
  BACKEND_FOLDER_PATH: ${{ inputs.backendFolderPath || 'backends' }}

concurrency:
  group: ${{ inputs.environment }}
  cancel-in-progress: false

jobs:
  terraform:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    name: Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Uppercase environment name
        run: echo "ENVIRONMENT_UPPERCASE=$(echo ${{ env.ENVIRONMENT }} | tr '[:lower:]' '[:upper:]')" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        env:
          AWS_ACCOUNT_ID: ${{ vars[format('{0}_AWS_ACCOUNT_ID', env.ENVIRONMENT_UPPERCASE )] }}
          AWS_ACCOUNT_REGION: ${{ vars[format('{0}_AWS_ACCOUNT_REGION', env.ENVIRONMENT_UPPERCASE )] }}
        with:
          aws-region: ${{ env.AWS_ACCOUNT_REGION }}
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/github

      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3

      - name: terraform validate
        uses: dflook/terraform-validate@v1

      - name: terraform fmt
        uses: dflook/terraform-fmt-check@v1

      - name: terraform plan
        uses: dflook/terraform-plan@v1
        with:
          var_file: |
            ${{ env.VARS_FOLDER_PATH }}/${{ env.ENVIRONMENT }}.tfvars
          backend_config_file: ${{ env.BACKEND_FOLDER_PATH }}/${{ env.ENVIRONMENT }}.s3.tfbackend

on:
  workflow_call:
    inputs:
      environment:
        description: "Environment name (master, prod, dev, security, etc...)"
        type: string
        required: true

      varsFolderPath:
        description: "Vars folder path for generated tfvars file"
        type: string
        required: false

      backendFolderPath:
        description: "Backends folder path for generated tfbackend file"
        type: string
        required: false
