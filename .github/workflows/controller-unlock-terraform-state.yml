name: |-
  Controller - Unlock Terraform State
  
  It helps to unlock the remote terraform state by lock id
  
  ### Usage 
  
  ```yaml
    name: Unlock state
    
    permissions:
      id-token: write
      contents: read
    
    jobs:
      unlock_state:
        uses: softkitit/github-actions-terraform/.github/workflows/controller-unlock-terraform-state.yml@main
        with:
          lockId: $\{\{ inputs.lockId \}\}
          environment: $\{\{ inputs.environment \}\}
          terraformFolder: '.'
        secrets: inherit
  
    on:
      workflow_dispatch:
        inputs:
          lockId:
            description: "Lock id"
            required: true
          environment:
            description: "Environment to apply changes to"
            required: true
            type: choice
            options:
              - dev
              - prod
  ```

permissions:
  id-token: write
  contents: read

concurrency:
  group: ${{ inputs.lockId }}
  cancel-in-progress: true

env:
  ENVIRONMENT: ${{ inputs.environment }}
  VARS_FOLDER_PATH: ${{ inputs.varsFolderPath || 'vars' }}
  BACKEND_FOLDER_PATH: ${{ inputs.backendFolderPath || 'backends' }}
  TERRAFORM_ROOT: ${{ inputs.terraformFolder && format('{0}/', inputs.terraformFolder) || '' }}

jobs:
  unlock:
    name: Unlock
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.terraformFolder || '.' }}
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3

      - name: Uppercase environment name
        run: echo "ENVIRONMENT_UPPERCASE=$(echo ${{ env.ENVIRONMENT }} | tr '[:lower:]' '[:upper:]')" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        env:
          AWS_ACCOUNT_ID: ${{ vars[format('{0}_AWS_ACCOUNT_ID', env.ENVIRONMENT_UPPERCASE )] }}
          AWS_ACCOUNT_REGION: ${{ vars[format('{0}_AWS_ACCOUNT_REGION', env.ENVIRONMENT_UPPERCASE )] }}
        with:
          aws-region: ${{ env.AWS_ACCOUNT_REGION }}
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/github

      - name: Terraform Unlock
        uses: dflook/terraform-unlock-state@v1
        with:
          path: ${{ env.TERRAFORM_ROOT }}
          lock_id: ${{ inputs.lockId }}
          var_file: |
            ${{ env.TERRAFORM_ROOT }}${{ env.VARS_FOLDER_PATH }}/${{ env.ENVIRONMENT }}.tfvars
          backend_config_file: ${{ env.TERRAFORM_ROOT }}${{ env.BACKEND_FOLDER_PATH }}/${{ env.ENVIRONMENT }}.s3.tfbackend
          auto_approve: true

on:
  workflow_call:
    inputs:
      environment:
        description: "Environment name (master, prod, dev, security, etc...)"
        type: string
        required: true

      terraformFolder:
        description: "Root folder path for terraform files"
        type: string
        required: false

      varsFolderPath:
        description: "Vars folder path for generated tfvars file"
        type: string
        required: false

      backendFolderPath:
        description: "Backends folder path for generated tfbackend file"
        type: string
        required: false

      lockId:
        description: "Lock ID to be unlocked"
        type: string
        required: true
