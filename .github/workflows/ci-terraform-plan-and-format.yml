name: |-
  CI - Terraform Plan, Validate and Format
  
  It runs terraform plan, validate and format and updating a pull request with the changes
  
  ### Usage 
  
  ```yaml
    name: Terraform plan and format
  
    permissions:
      contents: write
      pull-requests: write
      id-token: write
  
    concurrency:
      group: $\{\{ inputs.environment \}\}
      cancel-in-progress: false
  
    on:
      pull_request:
        branches:
          - main
        types: [ opened, reopened, synchronize, labeled ]
  
      workflow_dispatch:
        inputs:
          environment:
            description: "Environment to apply changes to"
            required: true
            type: choice
            options:
              - dev
              - prod

    jobs:
      plan_and_format:
        uses: softkitit/github-actions-terraform/.github/workflows/ci-terraform-plan-and-format.yml@main
        with:
          environment: $\{\{ inputs.environment || 'dev' \}\}
          override-plan-comment: $\{\{ inputs.environment == 'dev' \}\}
          terraform-folder: '.'
        secrets: inherit
  ```

permissions:
  contents: write
  pull-requests: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ inputs.environment }}
  cancel-in-progress: false

jobs:
  terraform:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    name: Terraform
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Get env information
        id: env
        uses: softkitit/github-actions-terraform/actions/environment-information@main
        with:
          environment: ${{ inputs.environment }}

      - name: Build terraform files paths
        id: tf
        uses: softkitit/github-actions-terraform/actions/terraform-paths@main
        with:
          environment: ${{ inputs.environment }}
          terraform-folder: ${{ inputs.terraform-folder }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars[steps.env.outputs.aws-region-key] }}
          role-to-assume: arn:aws:iam::${{ vars[steps.env.outputs.aws-account-id-key] }}:role/${{ inputs.role-name }}

      - name: terraform validate
        uses: dflook/terraform-validate@v1
        with:
          path: ${{ steps.tf.outputs.root }}
          backend_config_file: ${{ steps.tf.outputs.backend-file }}

      - name: terraform check fmt
        uses: dflook/terraform-fmt-check@v1
        id: fmt-check
        with:
          path: ${{ steps.tf.outputs.root }}
          backend_config_file: ${{ steps.tf.outputs.backend-file }}
        continue-on-error: true

      - name: terraform fix fmt
        if: steps.fmt-check.outcome == 'failure'
        uses: dflook/terraform-fmt@v1
        with:
          path: ${{ steps.tf.outputs.root }}
          backend_config_file: ${{ steps.tf.outputs.backend-file }}

      - name: check terraform format again
        if: steps.fmt-check.outcome == 'failure'
        uses: dflook/terraform-fmt-check@v1
        with:
          path: ${{ steps.tf.outputs.root }}
          backend_config_file: ${{ steps.tf.outputs.backend-file }}

      - uses: stefanzweifel/git-auto-commit-action@v5
        if: steps.fmt-check.outcome == 'failure'
        with:
          commit_message: Auto fix formatting
          commit_options: '--no-verify --signoff'
          commit_user_name: ${{ github.actor }}
          commit_user_email: ${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com
          status_options: '--untracked-files=no'
          skip_dirty_check: true
          skip_fetch: true
          skip_checkout: true
          disable_globbing: true
          create_branch: false

      - name: terraform plan
        uses: dflook/terraform-plan@v1
        env:
          # erase github token to prevent it to being explicitly used in tf plan github provider
          GITHUB_TOKEN: ''
          TERRAFORM_ACTIONS_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_PLAN_COLLAPSE_LENGTH: 30
        with:
          path: ${{ steps.tf.outputs.root }}
          backend_config_file: ${{ steps.tf.outputs.backend-file }}
          var_file: ${{ steps.tf.outputs.vars-file }}
          variables: ${{ inputs.additional-variables }}
          add_github_comment: ${{ inputs.override-plan-comment && true || 'always-new' }}

on:
  workflow_call:
    inputs:
      environment:
        description: "Environment name (master, prod, dev, security, etc...)"
        type: string
        required: true

      override-plan-comment:
        description: "Override the default plan comment in the PR"
        type: boolean
        default: true
        required: false

      terraform-folder:
        description: "Root folder path for terraform files"
        type: string
        required: false

      role-name:
        description: "AWS role name to assume for the terraform state initialization"
        type: string
        required: false
        default: "github"

      additional-variables:
        description: "Additional variables to pass to the terraform apply command"
        type: string
        required: false