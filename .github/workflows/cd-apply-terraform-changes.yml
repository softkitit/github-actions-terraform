name: |-
  CD - Apply terraform changes
  
  It applies the terraform changes to the environment
    
  ### Usage 
  
  ```yaml
    name: Apply Terraform Changes
  
    permissions:
      contents: read
      pull-requests: write
      id-token: write

    on:
      pull_request:
        branches:
          - main
        types: [closed]
  
      workflow_dispatch:
        inputs:
          environment:
            description: "Environment to apply changes to"
            required: true
            type: choice
            options:
              - dev
              - prod

    jobs:
      apply_changes:
        if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
        uses: softkitit/github-actions-terraform/.github/workflows/cd-apply-terraform-changes.yml@main
        with:
          environment: $\{\{ inputs.environment || 'dev' \}\}
          terraformFolder: '.'
        secrets: inherit
  ```

env:
  ENVIRONMENT: ${{ inputs.environment }}
  VARS_FOLDER_PATH: ${{ inputs.varsFolderPath || 'vars' }}
  BACKEND_FOLDER_PATH: ${{ inputs.backendFolderPath || 'backends' }}

concurrency:
  group: ${{ inputs.environment }}
  cancel-in-progress: false

permissions:
  contents: read
  pull-requests: write
  id-token: write


jobs:
  plan:
    runs-on: ubuntu-latest
    name: Apply Terraform changes
    defaults:
      run:
        working-directory: ${{ inputs.terraformFolder || '.' }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Uppercase environment name
        run: echo "ENVIRONMENT_UPPERCASE=$(echo ${{ env.ENVIRONMENT }} | tr '[:lower:]' '[:upper:]')" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        env:
          AWS_ACCOUNT_ID: ${{ vars[format('{0}_AWS_ACCOUNT_ID', env.ENVIRONMENT_UPPERCASE )] }}
          AWS_ACCOUNT_REGION: ${{ vars[format('{0}_AWS_ACCOUNT_REGION', env.ENVIRONMENT_UPPERCASE )] }}
        with:
          aws-region: ${{ env.AWS_ACCOUNT_REGION }}
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/github

      - name: terraform apply
        uses: dflook/terraform-apply@v1
        continue-on-error: true
        id: first_try

        with:
          var_file: |
            ${{ env.VARS_FOLDER_PATH }}/${{ env.ENVIRONMENT }}.tfvars
          backend_config_file: ${{ env.BACKEND_FOLDER_PATH }}/${{ env.ENVIRONMENT }}.s3.tfbackend
          auto_approve: true

      - name: Retry failed apply
        uses: dflook/terraform-apply@v1
        if: ${{ steps.first_try.outputs.failure-reason == 'apply-failed' }}
        with:
          var_file: |
            ${{ env.VARS_FOLDER_PATH }}/${{ env.ENVIRONMENT }}.tfvars
          backend_config_file: ${{ env.BACKEND_FOLDER_PATH }}/${{ env.ENVIRONMENT }}.s3.tfbackend
          auto_approve: true

on:
  workflow_call:
    inputs:
      environment:
        description: "Environment name (master, prod, dev, security, etc...)"
        type: string
        required: true

      terraformFolder:
        description: "Root folder path for terraform files"
        type: string
        required: false

      varsFolderPath:
        description: "Vars folder path for generated tfvars file"
        type: string
        required: false

      backendFolderPath:
        description: "Backends folder path for generated tfbackend file"
        type: string
        required: false
