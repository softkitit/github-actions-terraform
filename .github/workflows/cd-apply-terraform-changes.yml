name: |-
  CD - Apply terraform changes
  
  It applies the terraform changes to the environment
    
  ### Usage 
  
  ```yaml
    name: Apply Terraform Changes
  
    permissions:
      contents: read
      pull-requests: write
      id-token: write

    on:
      pull_request:
        branches:
          - main
        types: [closed]
  
      workflow_dispatch:
        inputs:
          environment:
            description: "Environment to apply changes to"
            required: true
            type: choice
            options:
              - dev
              - prod

    jobs:
      apply_changes:
        if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
        uses: softkitit/github-actions-terraform/.github/workflows/cd-apply-terraform-changes.yml@main
        with:
          environment: $\{\{ inputs.environment || 'dev' \}\}
          terraform-folder: '.'
        secrets: inherit
  ```

env:
  VARS_FOLDER_PATH: ${{ inputs.varsFolderPath || 'vars' }}
  BACKEND_FOLDER_PATH: ${{ inputs.backendFolderPath || 'backends' }}
  TERRAFORM_ROOT: ${{ inputs.terraform-folder && format('{0}/', inputs.terraform-folder) || '' }}

concurrency:
  group: ${{ github.workflow }}-${{ inputs.environment }}
  cancel-in-progress: false

permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  plan:
    runs-on: ubuntu-latest
    name: Apply Terraform changes
    defaults:
      run:
        working-directory: ${{ inputs.terraform-folder || '.' }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Get env information
        id: env
        uses: softkitit/github-actions-terraform/actions/environment-information@main
        with:
          environment: ${{ inputs.environment }}

      - name: Build terraform files paths
        id: tf
        uses: softkitit/github-actions-terraform/actions/terraform-paths@main
        with:
          environment: ${{ inputs.environment }}
          terraform-folder: ${{ inputs.terraform-folder }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars[steps.env.outputs.aws-region-key] }}
          role-to-assume: arn:aws:iam::${{ vars[steps.env.outputs.aws-account-id-key] }}:role/${{ inputs.role-name }}

      - name: terraform apply
        uses: dflook/terraform-apply@v1
        continue-on-error: true
        id: first_try
        env:
          # erase github token to prevent it to being explicitly used in tf plan github provider
          GITHUB_TOKEN: ""
        with:
          path: ${{ steps.tf.outputs.root }}
          backend_config_file: ${{ steps.tf.outputs.backend-file }}
          var_file: ${{ steps.tf.outputs.vars-file }}
          variables: ${{ inputs.additionalVariables }}
          auto_approve: true

      - name: Retry failed apply
        uses: dflook/terraform-apply@v1
        if: ${{ steps.first_try.outputs.failure-reason == 'apply-failed' }}
        with:
          path: ${{ steps.tf.outputs.root }}
          backend_config_file: ${{ steps.tf.outputs.backend-file }}
          var_file: ${{ steps.tf.outputs.vars-file }}
          variables: ${{ inputs.additional-variables }}
          auto_approve: true

on:
  workflow_call:
    inputs:
      environment:
        description: "Environment name (master, prod, dev, security, etc...)"
        type: string
        required: true

      terraform-folder:
        description: "Root folder path for terraform files"
        type: string
        required: false

      role-name:
        description: "AWS role name to assume for the terraform state initialization"
        type: string
        required: false
        default: "github"

      additional-variables:
        description: "Additional variables to pass to the terraform apply command"
        type: string
        required: false
