name: |-
  Controller - Configure AWS Credentials
  
  It allows to configure AWS credentials using a role or manually providing access key and secret key
  
  ### Usage with manual dispatch
  
  ```yaml
    name: REPLACE_ME
    on:
      push:
        branches: [ main ]
    jobs:
      configure_aws_credentials:
        uses: softkitit/github-actions-terraform/.github/workflows/controller-configure-aws-credentials.yml@main
        with:
          awsRegion: $\{\{ inputs.awsRegion \}\}
          awsAccessKeyId: $\{\{ inputs.awsAccessKeyId \}\}
          awsSecretAccessKey: $\{\{ inputs.awsSecretAccessKey \}\}
          awsSessionToken: $\{\{ inputs.awsSessionToken \}\}
          environment: $\{\{ inputs.environment || 'dev' \}\}

    on:
      workflow_dispatch:
        inputs:
          awsAccessKeyId:
            description: "AWS Access Key ID"
            required: true
          awsSecretAccessKey:
            description: "AWS Secret Access Key"
            required: true
          awsSessionToken:
            description: "AWS Session Token"
            required: true
          awsRegion:
            description: "AWS Region"
            required: true
          environment:
            description: "Environment to apply changes to"
            required: true
            type: choice
            options:
              - dev
              - prod
  ```
  
  ### Usage with manual dispatch
  
  ```yaml
    name: REPLACE_ME
    on:
      push:
        branches: [ main ]
    jobs:
      configure_aws_credentials:
        uses: softkitit/github-actions-terraform/.github/workflows/controller-configure-aws-credentials.yml@main
        with:
          roleName: 'github'
          environment: $\{\{ inputs.environment || 'dev' \}\}

    on:
      workflow_dispatch:
        inputs:
          environment:
            description: "Environment to apply changes to"
            required: true
            type: choice
            options:
              - dev
              - prod
  ```

env:
  USE_PROVIDED_CREDENTIALS: ${{ inputs.awsRegion != '' && inputs.awsAccessKeyId != '' && inputs.awsSecretAccessKey != '' && inputs.awsSessionToken != '' }}
  USE_OIDC: ${{ inputs.awsAccessKeyId == '' && inputs.roleName != '' }}


runs:
  using: "composite"
  steps:
    - name: Uppercase environment name
      if: ${{ env.USE_OIDC }}
      run: | 
        ENVIRONMENT_UPPERCASE=$(echo ${{ env.ENVIRONMENT }} | tr '[:lower:]' '[:upper:]')
        echo "AWS_ACCOUNT_ID=${{ vars[format('{0}_AWS_ACCOUNT_ID', env.ENVIRONMENT_UPPERCASE )] }}" >> $GITHUB_ENV
        echo "AWS_ACCOUNT_REGION=${{ vars[format('{0}_AWS_ACCOUNT_REGION', env.ENVIRONMENT_UPPERCASE )] }}" >> $GITHUB_ENV

    - name: Configure AWS credentials
      if: ${{ env.USE_OIDC }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_ACCOUNT_REGION }}
        role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ inputs.roleName }}

    - name: Configure AWS Credentials using provided
      if: ${{ env.USE_PROVIDED_CREDENTIALS }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ inputs.awsRegion }}
        aws-access-key-id: ${{ inputs.awsAccessKeyId }}
        aws-secret-access-key: ${{ inputs.awsSecretAccessKey }}
        aws-session-token: ${{ inputs.awsSessionToken }}


inputs:
  awsAccessKeyId:
    description: "AWS Access Key ID"
    type: string
    required: false

  awsSecretAccessKey:
    description: "AWS Secret Access Key"
    type: string
    required: false

  awsSessionToken:
    description: "AWS Session Token"
    type: string
    required: false

  awsRegion:
    description: "AWS Region"
    type: string
    required: false

  environment:
    description: "Environment name (master, prod, dev, security, etc...)"
    type: string
    default: "dev"
    required: true

  roleName:
    description: "AWS role name to assume for the terraform state initialization"
    type: string
    required: false
    default: "github"

