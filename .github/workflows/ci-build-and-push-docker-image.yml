name: |-
  CI - Build and Push Docker Image to ECR
  
  ### Usage 
  
  ```yaml
   name: Build and push docker image
  
    permissions:
      contents: read
      id-token: write
  
    on:
      pull_request:
        branches:
          - main
  
      workflow_dispatch:
        inputs:
          environment:
            description: "Environment to apply changes to"
            required: true
            type: choice
            options:
              - dev
              - prod

    jobs:
      build-and-push-image:
        uses: softkitit/github-actions-terraform/.github/workflows/ci-build-and-push-docker-image.yml@main
        with:
          environment: $\{\{ inputs.environment || 'dev' \}\}
          ecr-repository-name: $\{\{ github.event.repository.name \}\}
          image-tag: $\{\{ format("{0}-{1}", github.run_id, github.run_attempt) \}\}
  
        secrets: inherit
  ```

permissions:
  contents: read
  id-token: write

concurrency:
  group: ${{ inputs.environment }}
  cancel-in-progress: false

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    outputs:
      image-tag: ${{ steps.build-publish.outputs.image-tag }}
      full-image: ${{ steps.build-publish.outputs.full-image }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Download additional artifact
        if: inputs.additional-artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.additional-artifact }}

      - name: Get env information
        id: env
        uses: softkitit/github-actions-terraform/actions/environment-information@main
        with:
          environment: ${{ inputs.environment }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars[steps.env.outputs.aws-region-key] }}
          role-to-assume: arn:aws:iam::${{ vars[steps.env.outputs.aws-account-id-key] }}:role/${{ inputs.role-name }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: ${{ inputs.deployment-account-id }}

      - name: Verify image exists
        id: verify-image-exists
        run: |
          echo "exists=$(aws ecr describe-images --registry-id ${{ inputs.ecr-repository-account-id }} \ 
          --repository-name ${{ inputs.ecr-repository-name }} \ 
          --image-ids imageTag=${{ inputs.image-tag }} && 'true' || 'false')" >> $GITHUB_OUTPUT

      - name: Define image tag and full url
        id: image-info
        run: |
          echo "image-tag=${{ inputs.image-tag }}" >> $GITHUB_OUTPUT
          echo "full-image=${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr-repository-name }}:${{ inputs.image-tag }}" >> $GITHUB_OUTPUT

      - name: Build, tag, and push image
        id: build-publish
        if: steps.verify-image-exists.outputs.exists == 'false'
        run: |
          docker build -f ${{ inputs.docker-file-path }} -t "${{ steps.image-info.outputs.full-image }}" .
          docker push "${{ steps.image-info.outputs.full-image }}"
          echo "Image tag - ${{ steps.image-info.outputs.image-tag }} is pushed to ${{ steps.image-info.outputs.full-image }}"

on:
  workflow_call:
    outputs:
      image-tag:
        description: "Docker image tag"
        value: ${{ jobs.image-info.outputs.image-tag }}
      full-image-url:
        description: "Full image URL"
        value: ${{ jobs.image-info.outputs.full-image }}

    inputs:
      environment:
        description: "Environment name (master, prod, dev, security, etc...)"
        type: string
        required: true

      docker-file-path:
        description: "Docker file path"
        type: string
        default: "Dockerfile"
        required: false

      role-name:
        description: "AWS role name to assume for the terraform state initialization"
        type: string
        required: false
        default: "github"

      ecr-repository-name:
        description: "ECR repository name"
        type: string
        required: true

      image-tag:
        description: "Docker image tag"
        type: string
        required: true

      deployment-account-id:
        description: "Deployment account ID"
        type: string
        required: false

      additional-artifact:
        description: "Additional artifact to be downloaded for building a docker image"
        type: string
        required: false
